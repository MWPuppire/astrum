#ifndef INCLUDE_ASTRUM_KEY
#define INCLUDE_ASTRUM_KEY

namespace Astrum {

enum class Key {
	UNKNOWN = 0,
	SPACE = ' ',
	ESCAPE = 0x1B,
	ENTER = '\r',
	TAB = '\t',
	BACKSPACE = '\b',
	BANG = '!',
	QUOTE = '"',
	HASH = '#',
	DOLLAR = '$',
	PERCENT = '%',
	AMPERSAND = '&',
	APOSTROPHE = '\'',
	LPAREN = '(',
	RPAREN = ')',
	ASTERISK = '*',
	PLUS = '+',
	COMMA = ',',
	MINUS = '-',
	PERIOD = '.',
	SLASH = '/',
	ZERO = '0',
	ONE = '1',
	TWO = '2',
	THREE = '3',
	FOUR = '4',
	FIVE = '5',
	SIX = '6',
	SEVEN = '7',
	EIGHT = '8',
	NINE = '9',
	COLON = ':',
	SEMICOLON = ';',
	LESS = '<',
	EQUAL = '=',
	GREATER = '>',
	QMARK = '?',
	AT = '@',
	A = 'a',
	B = 'b',
	C = 'c',
	D = 'd',
	E = 'e',
	F = 'f',
	G = 'g',
	H = 'h',
	I = 'i',
	J = 'j',
	K = 'k',
	L = 'l',
	M = 'm',
	N = 'n',
	O = 'o',
	P = 'p',
	Q = 'q',
	R = 'r',
	S = 's',
	T = 't',
	U = 'u',
	V = 'v',
	W = 'w',
	X = 'x',
	Y = 'y',
	Z = 'z',
	LBRACKET = '[',
	BACKSLASH = '\\',
	RBRACKET = ']',
	CARET = '^',
	UNDERSCORE = '_',
	BACKTICK = '`',
	INSERT = 256,
	DELETE,
	RIGHT,
	LEFT,
	DOWN,
	UP,
	PAGE_UP,
	PAGE_DOWN,
	HOME,
	END,
	CAPS_LOCK,
	SCROLL_LOCK,
	NUM_LOCK,
	PRINT_SCREEN,
	PAUSE,
	F1,
	F2,
	F3,
	F4,
	F5,
	F6,
	F7,
	F8,
	F9,
	F10,
	F11,
	F12,
	F13,
	F14,
	F15,
	F16,
	F17,
	F18,
	F19,
	F20,
	F21,
	F22,
	F23,
	F24,
	KP_0,
	KP_1,
	KP_2,
	KP_3,
	KP_4,
	KP_5,
	KP_6,
	KP_7,
	KP_8,
	KP_9,
	KP_PERIOD,
	KP_DIVIDE,
	KP_TIMES,
	KP_MINUS,
	KP_PLUS,
	KP_EQUAL,
	KP_ENTER,
	LSHIFT,
	RSHIFT,
	LCTRL,
	RCTRL,
	LALT,
	RALT,
	LGUI,
	RGUI,
};

enum class KeyMod {
	NONE     = 0,
	LSHIFT   = 1 << 0,
	RSHIFT   = 1 << 1,
	LCTRL    = 1 << 2,
	RCTRL    = 1 << 3,
	LALT     = 1 << 4,
	RALT     = 1 << 5,
	LGUI     = 1 << 6,
	RGUI     = 1 << 7,
	NUMLOCK  = 1 << 8,
	CAPSLOCK = 1 << 9,
	ALT_GR   = 1 << 10,
	SHIFT    = LSHIFT | RSHIFT,
	CTRL     = LCTRL | RCTRL,
	ALT      = LALT | RALT,
	GUI      = LGUI | RGUI,
};
static inline constexpr KeyMod operator|(KeyMod a, KeyMod b) {
	return KeyMod(int(a) | int(b));
}
static inline constexpr bool operator&(KeyMod a, KeyMod b) {
	return (int(a) & int(b)) != 0;
}

};

#endif
